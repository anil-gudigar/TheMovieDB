plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'jacoco'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'kotlin-allopen'
    id 'androidx.navigation.safeargs.kotlin'
}

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystoreDebugPropertiesFile = rootProject.file("keystoredebug.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreDebugProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreDebugProperties.load(new FileInputStream(keystoreDebugPropertiesFile))


def configuration = rootProject.ext.configuration
def libraries = rootProject.ext.libraries

android {
    compileSdkVersion configuration.compileSdkVersion
    defaultConfig {
        applicationId configuration.package
        minSdkVersion configuration.minSdkVersion
        targetSdkVersion configuration.targetSdkVersion
        versionCode configuration.appVersionCode
        versionName configuration.appVersionName
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
        kotlinOptions { jvmTarget = "1.8" }
    }

    dataBinding {
        enabled = true
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
    }

    signingConfigs {
        debug {
            keyAlias keystoreDebugProperties['keyAlias']
            keyPassword keystoreDebugProperties['keyPassword']
            storeFile file(keystoreDebugProperties['storeFile'])
            storePassword keystoreDebugProperties['storePassword']
        }
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug{
            applicationIdSuffix ".debug"
            versionNameSuffix '.debug'
            minifyEnabled false
            signingConfig signingConfigs.debug
            testCoverageEnabled !project.hasProperty('android.injected.invoked.from.ide')
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api project(":core")
    api project(":stylekit")
    api project(":movies")
    api project(":tvshows")
    api project(":people")
    api project(":more")

    // Dagger
    kapt "$libraries.daggerannotation"
    kapt "$libraries.daggerprocessor"
    annotationProcessor "$libraries.daggerannotation"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}