plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

def configuration = rootProject.ext.configuration
def libraries = rootProject.ext.libraries

android {
    compileSdkVersion configuration.compileSdkVersion
    defaultConfig {
        minSdkVersion configuration.minSdkVersion
        targetSdkVersion configuration.targetSdkVersion
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
        kotlinOptions { jvmTarget = "1.8" }
        buildConfigField 'String', 'API_DEVELOPER_TOKEN', "\"${api_developer_token}\""
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'BASE_URL', rootProject.ext.appProperties['BASE_URL']
            buildConfigField 'String', 'BASE_IMAGE_URL', rootProject.ext.appProperties['BASE_IMAGE_URL']
        }
        debug{
            minifyEnabled false
            testCoverageEnabled !project.hasProperty('android.injected.invoked.from.ide')
            buildConfigField 'String', 'BASE_URL', rootProject.ext.appProperties['BASE_URL_DEBUG']
            buildConfigField 'String', 'BASE_IMAGE_URL', rootProject.ext.appProperties['BASE_IMAGE_URL_DEBUG']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api 'com.android.support:support-annotations:27.1.1'
    api "$libraries.kotlinStdLib"
    api "$libraries.appCompat"
    api "$libraries.constraintLayout"

    // Networking
    api "$libraries.gson"
    api "$libraries.json"
    api "$libraries.retrofit"
    api "$libraries.retrofitRxAdapter"
    api "$libraries.retrofitGsonConverter"
    api "$libraries.okhttp3"
    api "$libraries.okhttp3Interceptor"
    api "$libraries.stetho"
    api "$libraries.stethoOkhttp"

    // Dagger
    kapt "$libraries.daggerannotation"
    kapt "$libraries.daggerprocessor"
    api "$libraries.dagger"
    api "$libraries.daggerandroid"
    api "$libraries.daggerandroidsupport"
    annotationProcessor "$libraries.daggerannotation"

    //room
    api "$libraries.roomruntime"
    api "$libraries.roomruntimektx"
    kapt "$libraries.roomcompiler"
    annotationProcessor "$libraries.roomcompiler"

    //androidx
    api "$libraries.androidxcore"
    api "$libraries.multidex"
    api "$libraries.androidxwork"
    api "$libraries.androidxvectordrawable"
    api "$libraries.kotlinxCoroutines"
    api "$libraries.androidxlegacy"
    api "$libraries.corektxandroidx"

    //navigation
    api "$libraries.androidxnavigationfragment"
    api "$libraries.androidxnavigationui"
    api "$libraries.androidxnavigationfragmentktx"
    api "$libraries.androidxnavigationuiktx"

    //lifecycle
    api "$libraries.androidxlifecycleextesion"
    api "$libraries.androidxlifecycleviewmodel"
    api "$libraries.lifecycleextensions"
    api "$libraries.lifecycleruntime"
    annotationProcessor "$libraries.lifecyclecompiler"
    api "$libraries.lifecyclelivedataktx"
    api "$libraries.lifecycleviewmodelktx"

    //Image Library
    api "$libraries.glide"
    api "$libraries.androidmaterial"

    api "$libraries.paging"
    
    //logging
    api "$libraries.timber"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

}